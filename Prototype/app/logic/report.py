# from pydantic import BaseModel

# class ReportRequest(BaseModel):
#     report_title: str
#     report_description: str
#     question1: str
#     question2: str
#     # Add more fields as needed


# class ReportGenerator:
#     def generates_report(self) -> str:
#         return "This is a sample report generated by the ReportGenerator."

#     def ask_question(self, purpose: str, findings: str, question1: str, question2: str):
#         return {
#             "Purpose": purpose,
#             "Findings": findings,
#             "Question 1": question1,
#             "Question 2": question2,
#             # Include more fields as needed
#         }


from pydantic import BaseModel

class ReportRequest(BaseModel):
    report_title: str
    report_description: str
    question1: str
    question2: str
    # Add more fields as needed


class ReportGenerator:
    def generates_report(self) -> str:
        return "This is a sample report generated by the ReportGenerator."

    # def ask_question(self, purpose: str, findings: str, question1: str, question2: str):
    #     return {
    #         "Purpose": purpose,
    #         "Timepoint": findings,
    #         "Question_1": question1,
    #         "Question_2": question2,
    #         "Question_3": question3,
    #         # Include more fields for additional questions as needed
    #     }

    def ask_question(self, **kwargs):
        return kwargs
